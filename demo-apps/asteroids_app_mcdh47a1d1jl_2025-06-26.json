{
  "id": "app_mcdh47a1d1jl",
  "title": "Asteroids",
  "icon": "🚀",
  "type": "ai-generated",
  "customRequest": "i want to play asteroids",
  "html": "<div id=\"app_mcdh47a1d1jl_gameContainer\" class=\"app_mcdh47a1d1jl__container\">\n  <canvas id=\"app_mcdh47a1d1jl_gameCanvas\" width=\"1920\" height=\"1080\"></canvas>\n  <div id=\"app_mcdh47a1d1jl_overlay\" class=\"app_mcdh47a1d1jl__overlay\">\n    <div id=\"app_mcdh47a1d1jl_startScreen\" class=\"app_mcdh47a1d1jl__start-screen\" style=\"display: none;\">\n      <h1 class=\"app_mcdh47a1d1jl__title\">Asteroids</h1>\n      <p class=\"app_mcdh47a1d1jl__instructions\">Use Arrow Keys to move, Space to shoot.</p>\n      <button id=\"app_mcdh47a1d1jl_startButton\" class=\"app_mcdh47a1d1jl__button\">Start Game</button>\n    </div>\n    <div id=\"app_mcdh47a1d1jl_gameOverScreen\" class=\"app_mcdh47a1d1jl__game-over-screen\" style=\"display: none;\">\n      <h2 class=\"app_mcdh47a1d1jl__game-over-title\">Game Over</h2>\n      <p class=\"app_mcdh47a1d1jl__score\">Score: <span id=\"app_mcdh47a1d1jl_finalScore\">0</span></p>\n      <button id=\"app_mcdh47a1d1jl_restartButton\" class=\"app_mcdh47a1d1jl__button\">Play Again</button>\n    </div>\n    <div class=\"app_mcdh47a1d1jl__hud\">\n      <span class=\"app_mcdh47a1d1jl__score-display\">Score: <span id=\"app_mcdh47a1d1jl_scoreDisplay\">0</span></span>\n      <span class=\"app_mcdh47a1d1jl__lives-display\">Lives: <span id=\"app_mcdh47a1d1jl_livesDisplay\">3</span></span>\n    </div>\n  </div>\n</div>",
  "css": ".app_mcdh47a1d1jl__container{position:relative;width:100%;height:100%;display:flex;justify-content:center;align-items:center;overflow:hidden;background-color:#000}.app_mcdh47a1d1jl__overlay{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;color:#fff;text-align:center}.app_mcdh47a1d1jl__start-screen,.app_mcdh47a1d1jl__game-over-screen{display:flex;flex-direction:column;align-items:center}.app_mcdh47a1d1jl__title{font-size:3em;margin-bottom:20px}.app_mcdh47a1d1jl__instructions{font-size:1.2em;margin-bottom:30px}.app_mcdh47a1d1jl__game-over-title{font-size:2.5em;margin-bottom:15px}.app_mcdh47a1d1jl__score{font-size:1.5em;margin-bottom:25px}.app_mcdh47a1d1jl__button{background-color:#007bff;color:#fff;border:none;padding:15px 30px;font-size:1.2em;cursor:pointer;border-radius:5px;transition:background-color .3s ease}.app_mcdh47a1d1jl__button:hover{background-color:#0056b3}.app_mcdh47a1d1jl__hud{position:absolute;top:10px;left:10px;right:10px;display:flex;justify-content:space-between;font-size:1.2em;pointer-events:none}.app_mcdh47a1d1jl__score-display,.app_mcdh47a1d1jl__lives-display{padding:5px 10px;background-color:rgba(0,0,0,.5);border-radius:3px}.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__button{background-color:#0d6efd}.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__button:hover{background-color:#198754}.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__title,.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__instructions,.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__score,.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__game-over-title{color:#f8f9fa}.app_mcdh47a1d1jl__container.app-dark-theme .app_mcdh47a1d1jl__hud{color:#f8f9fa}.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__button{background-color:#007bff}.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__button:hover{background-color:#0056b3}.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__title,.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__instructions,.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__score,.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__game-over-title{color:#212529}.app_mcdh47a1d1jl__container.app-light-theme .app_mcdh47a1d1jl__hud{color:#212529}",
  "javascript": "const app_mcdh47a1d1jl_canvas = document.getElementById('app_mcdh47a1d1jl_gameCanvas');\nconst app_mcdh47a1d1jl_ctx = app_mcdh47a1d1jl_canvas.getContext('2d');\nconst app_mcdh47a1d1jl_startButton = document.getElementById('app_mcdh47a1d1jl_startButton');\nconst app_mcdh47a1d1jl_restartButton = document.getElementById('app_mcdh47a1d1jl_restartButton');\nconst app_mcdh47a1d1jl_startScreen = document.getElementById('app_mcdh47a1d1jl_startScreen');\nconst app_mcdh47a1d1jl_gameOverScreen = document.getElementById('app_mcdh47a1d1jl_gameOverScreen');\nconst app_mcdh47a1d1jl_scoreDisplay = document.getElementById('app_mcdh47a1d1jl_scoreDisplay');\nconst app_mcdh47a1d1jl_livesDisplay = document.getElementById('app_mcdh47a1d1jl_livesDisplay');\nconst app_mcdh47a1d1jl_finalScoreDisplay = document.getElementById('app_mcdh47a1d1jl_finalScore');\n\nlet app_mcdh47a1d1jl_ship;\nlet app_mcdh47a1d1jl_asteroids;\nlet app_mcdh47a1d1jl_bullets;\nlet app_mcdh47a1d1jl_score;\nlet app_mcdh47a1d1jl_lives;\nlet app_mcdh47a1d1jl_gameOver;\nlet app_mcdh47a1d1jl_gameLoopId;\n\nconst app_mcdh47a1d1jl_SCREEN_WIDTH = window.innerWidth;\nconst app_mcdh47a1d1jl_SCREEN_HEIGHT = window.innerHeight;\n\napp_mcdh47a1d1jl_canvas.width = app_mcdh47a1d1jl_SCREEN_WIDTH;\napp_mcdh47a1d1jl_canvas.height = app_mcdh47a1d1jl_SCREEN_HEIGHT;\n\nfunction app_mcdh47a1d1jl_dist(p1, p2) {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n\nclass app_mcdh47a1d1jl_Ship {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.rotation = 0;\n        this.thrust = 0;\n        this.velocity = { x: 0, y: 0 };\n        this.sprite = [\n            { x: 0, y: -15 },\n            { x: 10, y: 10 },\n            { x: -10, y: 10 }\n        ];\n        this.width = 20;\n        this.height = 30;\n        this.thrusting = false;\n    }\n\n    rotate(dir) {\n        this.rotation += dir * 0.1;\n    }\n\n    setThrust(thrusting) {\n        this.thrusting = thrusting;\n    }\n\n    update() {\n        if (this.thrusting) {\n            this.velocity.x += Math.sin(this.rotation) * 0.1;\n            this.velocity.y -= Math.cos(this.rotation) * 0.1;\n        }\n\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n\n        this.velocity.x *= 0.99;\n        this.velocity.y *= 0.99;\n\n        if (this.x > app_mcdh47a1d1jl_SCREEN_WIDTH + this.width) this.x = -this.width;\n        if (this.x < -this.width) this.x = app_mcdh47a1d1jl_SCREEN_WIDTH + this.width;\n        if (this.y > app_mcdh47a1d1jl_SCREEN_HEIGHT + this.height) this.y = -this.height;\n        if (this.y < -this.height) this.y = app_mcdh47a1d1jl_SCREEN_HEIGHT + this.height;\n    }\n\n    draw() {\n        app_mcdh47a1d1jl_ctx.save();\n        app_mcdh47a1d1jl_ctx.translate(this.x, this.y);\n        app_mcdh47a1d1jl_ctx.rotate(this.rotation);\n\n        app_mcdh47a1d1jl_ctx.strokeStyle = '#fff';\n        app_mcdh47a1d1jl_ctx.lineWidth = 2;\n        app_mcdh47a1d1jl_ctx.beginPath();\n        for (let i = 0; i < this.sprite.length; i++) {\n            const point = this.sprite[i];\n            if (i === 0) {\n                app_mcdh47a1d1jl_ctx.moveTo(point.x, point.y);\n            } else {\n                app_mcdh47a1d1jl_ctx.lineTo(point.x, point.y);\n            }\n        }\n        app_mcdh47a1d1jl_ctx.closePath();\n        app_mcdh47a1d1jl_ctx.stroke();\n\n        if (this.thrusting) {\n            app_mcdh47a1d1jl_ctx.beginPath();\n            app_mcdh47a1d1jl_ctx.moveTo(this.sprite[1].x, this.sprite[1].y);\n            app_mcdh47a1d1jl_ctx.lineTo(this.sprite[2].x, this.sprite[2].y);\n            app_mcdh47a1d1jl_ctx.lineTo(this.sprite[1].x + (Math.random() - 0.5) * 10, this.sprite[1].y + 10);\n            app_mcdh47a1d1jl_ctx.lineTo(this.sprite[2].x + (Math.random() - 0.5) * 10, this.sprite[2].y + 10);\n            app_mcdh47a1d1jl_ctx.stroke();\n        }\n\n        app_mcdh47a1d1jl_ctx.restore();\n    }\n}\n\nclass app_mcdh47a1d1jl_Asteroid {\n    constructor(x, y, size) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.sides = Math.floor(Math.random() * 5) + 5;\n        this.vertices = [];\n        this.rotation = Math.random() * Math.PI * 2;\n        this.rotationSpeed = (Math.random() - 0.5) * 0.05;\n        this.velocity = {\n            x: (Math.random() - 0.5) * 2,\n            y: (Math.random() - 0.5) * 2\n        };\n        this.points = [];\n\n        const angleIncrement = Math.PI * 2 / this.sides;\n        for (let i = 0; i < this.sides; i++) {\n            const angle = i * angleIncrement;\n            const radius = size + (Math.random() - 0.5) * size * 0.3;\n            this.vertices.push({\n                x: Math.cos(angle) * radius,\n                y: Math.sin(angle) * radius\n            });\n        }\n    }\n\n    update() {\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n        this.rotation += this.rotationSpeed;\n\n        if (this.x > app_mcdh47a1d1jl_SCREEN_WIDTH + this.size) this.x = -this.size;\n        if (this.x < -this.size) this.x = app_mcdh47a1d1jl_SCREEN_WIDTH + this.size;\n        if (this.y > app_mcdh47a1d1jl_SCREEN_HEIGHT + this.size) this.y = -this.size;\n        if (this.y < -this.size) this.y = app_mcdh47a1d1jl_SCREEN_HEIGHT + this.size;\n    }\n\n    draw() {\n        app_mcdh47a1d1jl_ctx.save();\n        app_mcdh47a1d1jl_ctx.translate(this.x, this.y);\n        app_mcdh47a1d1jl_ctx.rotate(this.rotation);\n        app_mcdh47a1d1jl_ctx.strokeStyle = '#fff';\n        app_mcdh47a1d1jl_ctx.lineWidth = 2;\n        app_mcdh47a1d1jl_ctx.beginPath();\n        for (let i = 0; i < this.vertices.length; i++) {\n            const vertex = this.vertices[i];\n            if (i === 0) {\n                app_mcdh47a1d1jl_ctx.moveTo(vertex.x, vertex.y);\n            } else {\n                app_mcdh47a1d1jl_ctx.lineTo(vertex.x, vertex.y);\n            }\n        }\n        app_mcdh47a1d1jl_ctx.closePath();\n        app_mcdh47a1d1jl_ctx.stroke();\n        app_mcdh47a1d1jl_ctx.restore();\n    }\n}\n\nclass app_mcdh47a1d1jl_Bullet {\n    constructor(x, y, rotation) {\n        this.x = x;\n        this.y = y;\n        this.rotation = rotation;\n        this.speed = 5;\n        this.radius = 3;\n        this.lifespan = 50;\n        this.velocity = {\n            x: Math.sin(this.rotation) * this.speed,\n            y: -Math.cos(this.rotation) * this.speed\n        };\n    }\n\n    update() {\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n        this.lifespan--;\n    }\n\n    draw() {\n        app_mcdh47a1d1jl_ctx.fillStyle = '#fff';\n        app_mcdh47a1d1jl_ctx.beginPath();\n        app_mcdh47a1d1jl_ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        app_mcdh47a1d1jl_ctx.fill();\n    }\n}\n\nfunction app_mcdh47a1d1jl_resetGame() {\n    app_mcdh47a1d1jl_ship = new app_mcdh47a1d1jl_Ship(app_mcdh47a1d1jl_SCREEN_WIDTH / 2, app_mcdh47a1d1jl_SCREEN_HEIGHT / 2);\n    app_mcdh47a1d1jl_asteroids = [];\n    app_mcdh47a1d1jl_bullets = [];\n    app_mcdh47a1d1jl_score = 0;\n    app_mcdh47a1d1jl_lives = 3;\n    app_mcdh47a1d1jl_gameOver = false;\n    app_mcdh47a1d1jl_scoreDisplay.textContent = app_mcdh47a1d1jl_score;\n    app_mcdh47a1d1jl_livesDisplay.textContent = app_mcdh47a1d1jl_lives;\n    app_mcdh47a1d1jl_gameOverScreen.style.display = 'none';\n    app_mcdh47a1d1jl_startScreen.style.display = 'flex';\n}\n\nfunction app_mcdh47a1d1jl_createAsteroids(num, size, x, y) {\n    for (let i = 0; i < num; i++) {\n        let newAsteroid;\n        do {\n            newAsteroid = new app_mcdh47a1d1jl_Asteroid(\n                Math.random() * app_mcdh47a1d1jl_SCREEN_WIDTH,\n                Math.random() * app_mcdh47a1d1jl_SCREEN_HEIGHT,\n                size\n            );\n        } while (app_mcdh47a1d1jl_dist({ x: x, y: y }, newAsteroid) < 100);\n        app_mcdh47a1d1jl_asteroids.push(newAsteroid);\n    }\n}\n\nfunction app_mcdh47a1d1jl_startGame() {\n    app_mcdh47a1d1jl_resetGame();\n    app_mcdh47a1d1jl_createAsteroids(7, 30, app_mcdh47a1d1jl_ship.x, app_mcdh47a1d1jl_ship.y);\n    app_mcdh47a1d1jl_startScreen.style.display = 'none';\n    app_mcdh47a1d1jl_gameLoopId = setInterval(app_mcdh47a1d1jl_gameLoop, 1000 / 60);\n}\n\nfunction app_mcdh47a1d1jl_gameLoop() {\n    if (app_mcdh47a1d1jl_gameOver) return;\n\n    app_mcdh47a1d1jl_ctx.clearRect(0, 0, app_mcdh47a1d1jl_SCREEN_WIDTH, app_mcdh47a1d1jl_SCREEN_HEIGHT);\n    app_mcdh47a1d1jl_ctx.fillStyle = '#000';\n    app_mcdh47a1d1jl_ctx.fillRect(0, 0, app_mcdh47a1d1jl_SCREEN_WIDTH, app_mcdh47a1d1jl_SCREEN_HEIGHT);\n\n    app_mcdh47a1d1jl_ship.update();\n    app_mcdh47a1d1jl_ship.draw();\n\n    for (let i = app_mcdh47a1d1jl_asteroids.length - 1; i >= 0; i--) {\n        const asteroid = app_mcdh47a1d1jl_asteroids[i];\n        asteroid.update();\n        asteroid.draw();\n\n        if (app_mcdh47a1d1jl_dist(app_mcdh47a1d1jl_ship, asteroid) < asteroid.size) {\n            app_mcdh47a1d1jl_lives--;\n            app_mcdh47a1d1jl_livesDisplay.textContent = app_mcdh47a1d1jl_lives;\n            if (app_mcdh47a1d1jl_lives <= 0) {\n                app_mcdh47a1d1jl_endGame();\n            } else {\n                app_mcdh47a1d1jl_ship = new app_mcdh47a1d1jl_Ship(app_mcdh47a1d1jl_SCREEN_WIDTH / 2, app_mcdh47a1d1jl_SCREEN_HEIGHT / 2);\n                app_mcdh47a1d1jl_asteroids.splice(i, 1);\n                app_mcdh47a1d1jl_createAsteroids(1, asteroid.size, app_mcdh47a1d1jl_ship.x, app_mcdh47a1d1jl_ship.y);\n            }\n        }\n    }\n\n    for (let i = app_mcdh47a1d1jl_bullets.length - 1; i >= 0; i--) {\n        const bullet = app_mcdh47a1d1jl_bullets[i];\n        bullet.update();\n\n        if (bullet.lifespan <= 0 ||\n            bullet.x < 0 || bullet.x > app_mcdh47a1d1jl_SCREEN_WIDTH ||\n            bullet.y < 0 || bullet.y > app_mcdh47a1d1jl_SCREEN_HEIGHT) {\n            app_mcdh47a1d1jl_bullets.splice(i, 1);\n            continue;\n        }\n\n        bullet.draw();\n\n        for (let j = app_mcdh47a1d1jl_asteroids.length - 1; j >= 0; j--) {\n            const asteroid = app_mcdh47a1d1jl_asteroids[j];\n            if (app_mcdh47a1d1jl_dist(bullet, asteroid) < asteroid.size) {\n                app_mcdh47a1d1jl_score += 10;\n                app_mcdh47a1d1jl_scoreDisplay.textContent = app_mcdh47a1d1jl_score;\n                app_mcdh47a1d1jl_bullets.splice(i, 1);\n                app_mcdh47a1d1jl_asteroids.splice(j, 1);\n                if (asteroid.size > 10) {\n                    app_mcdh47a1d1jl_createAsteroids(2, asteroid.size / 2, asteroid.x, asteroid.y);\n                }\n                break;\n            }\n        }\n    }\n\n    if (app_mcdh47a1d1jl_asteroids.length === 0) {\n        app_mcdh47a1d1jl_endGame();\n    }\n}\n\nfunction app_mcdh47a1d1jl_endGame() {\n    clearInterval(app_mcdh47a1d1jl_gameLoopId);\n    app_mcdh47a1d1jl_gameOver = true;\n    app_mcdh47a1d1jl_finalScoreDisplay.textContent = app_mcdh47a1d1jl_score;\n    app_mcdh47a1d1jl_gameOverScreen.style.display = 'flex';\n}\n\nconst app_mcdh47a1d1jl_keys = {};\n\ndocument.addEventListener('keydown', (event) => {\n    app_mcdh47a1d1jl_keys[event.key] = true;\n    if (event.code === 'Space') {\n        event.preventDefault();\n        if (!app_mcdh47a1d1jl_gameOver && app_mcdh47a1d1jl_startScreen.style.display === 'none'){\n            app_mcdh47a1d1jl_bullets.push(new app_mcdh47a1d1jl_Bullet(app_mcdh47a1d1jl_ship.x, app_mcdh47a1d1jl_ship.y, app_mcdh47a1d1jl_ship.rotation));\n        }\n    }\n});\n\ndocument.addEventListener('keyup', (event) => {\n    app_mcdh47a1d1jl_keys[event.key] = false;\n});\n\nfunction app_mcdh47a1d1jl_updateShipMovement() {\n    if (!app_mcdh47a1d1jl_ship || app_mcdh47a1d1jl_gameOver || app_mcdh47a1d1jl_startScreen.style.display === 'flex') return;\n\n    if (app_mcdh47a1d1jl_keys['ArrowLeft']) {\n        app_mcdh47a1d1jl_ship.rotate(-1);\n    }\n    if (app_mcdh47a1d1jl_keys['ArrowRight']) {\n        app_mcdh47a1d1jl_ship.rotate(1);\n    }\n    if (app_mcdh47a1d1jl_keys['ArrowUp']) {\n        app_mcdh47a1d1jl_ship.setThrust(true);\n    } else {\n        app_mcdh47a1d1jl_ship.setThrust(false);\n    }\n}\n\nsetInterval(app_mcdh47a1d1jl_updateShipMovement, 1000 / 60);\n\napp_mcdh47a1d1jl_startButton.addEventListener('click', app_mcdh47a1d1jl_startGame);\napp_mcdh47a1d1jl_restartButton.addEventListener('click', app_mcdh47a1d1jl_startGame);\n\nwindow.addEventListener('resize', () => {\n    app_mcdh47a1d1jl_canvas.width = window.innerWidth;\n    app_mcdh47a1d1jl_canvas.height = window.innerHeight;\n    if (!app_mcdh47a1d1jl_gameOver && app_mcdh47a1d1jl_startScreen.style.display === 'none') {\n       app_mcdh47a1d1jl_ship.x = window.innerWidth / 2;\n       app_mcdh47a1d1jl_ship.y = window.innerHeight / 2;\n    }\n});\n\napp_mcdh47a1d1jl_resetGame();\n",
  "windowState": {
    "width": 1820,
    "height": 930,
    "left": 50,
    "top": 75
  },
  "isMinimized": false,
  "isMaximized": false,
  "modificationHistory": [],
  "lastModification": null,
  "promptHistory": [
    {
      "timestamp": "2025-06-26T14:23:28.062Z",
      "type": "creation",
      "userRequest": "i want to play asteroids",
      "prompt": "\nYou are an expert web developer specializing in creating modular, theme-aware web applications.\nYour task is to generate HTML, CSS, and JavaScript code for a new app based on user requests.\n\n        \nTASK:\nYou are creating a functional app for a windowed operating system interface.\n\nCRITICAL REQUIREMENTS:\n1. Create a COMPLETE, FUNCTIONAL app that works in a window\n2. The app will be placed inside a window with ID \"content_app_mcdh47a1d1jl\"\n3. Use ONLY vanilla HTML, CSS, and JavaScript - no external libraries\n4. Make the app responsive and fit well in a window (300-600px wide)\n5. Include ALL necessary functionality for the requested app\n6. Use modern, clean UI design\n\nRESPONSE FORMAT - Return ONLY a JSON object with this structure:\n{\n  \"title\": \"App Name\",\n  \"icon\": \"📱\",\n  \"html\": \"complete HTML content\",\n  \"css\": \"complete CSS styles\",\n  \"javascript\": \"complete JavaScript functionality\"\n}\n\nICON REQUIREMENTS:\n- Choose a single UTF-8 emoji that best represents the app's function\n- Examples: 📅 for calendar, 🧮 for calculator, 📝 for text editor, 🎮 for games, 📊 for charts, etc.\n- The icon should be intuitive and clearly represent the app's purpose\n\nCONTENT RULES:\n- Always create BOTH the User Interface AND the Logic (JavaScript)\n- For interactive elements (buttons, inputs, forms), ALWAYS include JavaScript\n- CRITICAL: Use addEventListener in JavaScript, NOT onclick attributes in HTML\n- Give all interactive elements unique IDs and reference them in JavaScript\n- IMPORTANT: onclick attributes will NOT work because JavaScript runs in isolated scope\n- Make sure you do not break the Response Format - return a valid JSON object\n\n    \n\nNAMESPACE ISOLATION REQUIREMENTS:\n- ALL HTML element IDs MUST be prefixed with \"app_mcdh47a1d1jl_\" (e.g., id=\"app_mcdh47a1d1jl_button1\")\n- ALL CSS classes MUST be prefixed with \"app_mcdh47a1d1jl__\" (e.g., class=\"app_mcdh47a1d1jl__container\")\n- ALL JavaScript variables and functions MUST be scoped to avoid conflicts\n- ALL custom events MUST be prefixed with \"app_mcdh47a1d1jl:\" (e.g., \"app_mcdh47a1d1jl:dataChanged\")\n- Use querySelector with app-specific selectors: document.querySelector('#app_mcdh47a1d1jl_elementId')\n\n\nESSENTIAL CSS GUIDELINES FOR THEME SUPPORT AND ACCESSIBILITY:\n\nTECHNICAL REQUIREMENTS:\n1. Use semantic HTML with proper button elements and unique IDs\n2. Center all content horizontally and vertically\n3. Responsive design that adapts to window size\n4. Clean, modern appearance with proper spacing\n5. CSS: Keep simple, no line breaks, avoid complex selectors\n6. HTML: Use single quotes for attributes to avoid JSON conflicts. NEVER use onclick attributes - use IDs instead\n7. IMPORTANT: class names can only contain lowercase letters, numbers, underscores, and dashes\n8. MANDATORY: the font color of an element should always contrast with the background color\n9. IMPORTANT: Always check, that all css classes used in the html have been generated\n10. MANDATORY: check that css classes are effectively applied to the HTML elements\n\nCRITICAL THEME REQUIREMENTS:\n- Apps automatically inherit .app-light-theme or .app-dark-theme classes\n- ALWAYS design for BOTH light and dark modes\n- Current theme: light\n\nMANDATORY CONTRAST RULES:\n1. NEVER light text on light backgrounds or dark text on dark backgrounds\n2. Display text must be clearly visible against display background\n3. Use CSS theme classes: .app-light-theme and .app-dark-theme for all styling\n4. MANDADOTRY: make sure text is always readable against the background color\n5. For input fields, always set the color attibute\n6. MANDATORY: make sure button text is always readable against the button background color\n\nAPPROVED COLOR PALETTE:\n\nLight Mode:\n- Backgrounds: #ffffff, #f8f9fa, #e9ecef\n- Text: #212529 (primary), #495057 (secondary), #6c757d (muted)\n- Buttons: #007bff (primary), #28a745 (success), #dc3545 (danger), #ffc107 (warning with dark text)\n\nDark Mode:\n- Backgrounds: #2c3e50, #34495e, #495057\n- Text: #f8f9fa (primary), #e9ecef (secondary), #ced4da (muted)\n- Buttons: #0d6efd (primary), #198754 (success), #dc3545 (danger), #ffc107 (warning with dark text)\n\nSAFE COMBINATIONS:\n✅ #ffffff text on #007bff, #28a745, #dc3545 backgrounds\n✅ #212529 text on #ffc107 background (warning)\n✅ #212529 text on #ffffff background (light mode)\n✅ #f8f9fa text on #2c3e50 background (dark mode)\n\n❌ #ffffff text on #ffc107 (white on yellow - FORBIDDEN)\n❌ Light text on light backgrounds\n❌ Dark text on dark backgrounds\n\nIMPLEMENTATION:\n- Use theme-aware CSS classes for different modes\n- Include hover/focus states for all interactive elements\n- Ensure 44px minimum touch targets\n- Keep responsive design (300-600px window width)\n\n\nESSENTIAL JAVASCRIPT CODE GENERATION GUIDELINES:\n- Write your JavaScript to handle all user interactions using addEventListener pattern\n- Ensure all form elements, buttons, and interactive areas have proper event handling\n- Test your logic mentally to ensure the app will work as expected\n- Keep code simple and avoid overly complex string manipulations that could cause parsing issues\n- The JSON must use double quotes \" for all keys and string values\n- Escape all double quotes inside the JavaScript string as \"\n- Escape all backslashes  as \\\n- Use \n for line breaks in multiline JavaScript code\n- Ensure the result can be parsed with JSON.parse() in JavaScript\n- Write clean JavaScript with addEventListener for all interactions\n- CRITICAL JSON FORMATTING: Ensure all strings are properly escaped for JSON\n- Avoid complex JavaScript with many quotes, brackets, or special characters\n- Keep JavaScript simple and readable to prevent JSON parsing errors\n- Always use document.getElementById() and addEventListener() pattern\n- Keep Javascript scripts simple and avoid complex string operations that could break JSON\n- All declared variables must be prefixed with \"app_mcdh47a1d1jl_\" to avoid conflicts\n        Now create a functional app for: i want to play asteroids\n\nIMAGE CONTEXT:\nThe user has provided 1 screenshot(s) to help with app creation. Please analyze the provided images and incorporate any relevant visual information, UI elements, design patterns, or functionality shown in the screenshots into your app creation.",
      "date": "6/26/2025, 4:23:28 PM"
    }
  ],
  "isSystemApp": false,
  "isHidden": false,
  "generationMode": "SIMPLE",
  "hasImages": true,
  "imageCount": 1,
  "namespace": "app_app_mcdh47a1d1jl",
  "exportDate": "2025-06-26T14:23:57.803Z",
  "exportedBy": "Self-Evolving OS v2.0.0",
  "version": "2.0",
  "compatibility": {
    "minVersion": "2.0.0",
    "features": [
      "namespace-isolation",
      "theme-support",
      "voice-modification",
      "prompt-history",
      "window-state-restoration"
    ]
  }
}