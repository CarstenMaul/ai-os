{
  "id": "app_mcavpjf54f28",
  "title": "Hackspace Shop",
  "type": "ai-generated",
  "customRequest": "Bitte erstelle eine Shop App f√ºr den Hackspace um den Verbrauch von Getr√§nken und S√ºssigkeiten zu buchen f√ºr die Mitglieder.",
  "html": "<div class=\"hackspace-shop\"><div class=\"header\"><h2>üõí Hackspace Shop</h2><div class=\"balance-display\"><span>Guthaben: </span><span id=\"balance\">‚Ç¨22.50</span></div></div><div class=\"member-section\"><label for=\"member-select\">Mitglied:</label><select id=\"member-select\"><option value=\"\">Mitglied ausw√§hlen</option><option value=\"max\">Max Mustermann</option><option value=\"anna\">Anna Schmidt</option><option value=\"tom\">Tom Weber</option><option value=\"lisa\">Lisa Meyer</option></select></div><div class=\"products-grid\"><div class=\"product-category\"><h3>Getr√§nke</h3><div class=\"product-item\"><span>Cola</span><span>‚Ç¨1.50</span><button id=\"btn-cola\" data-product=\"cola\" data-price=\"1.50\">+</button></div><div class=\"product-item\"><span>Wasser</span><span>‚Ç¨1.00</span><button id=\"btn-wasser\" data-product=\"wasser\" data-price=\"1.00\">+</button></div><div class=\"product-item\"><span>Kaffee</span><span>‚Ç¨0.50</span><button id=\"btn-kaffee\" data-product=\"kaffee\" data-price=\"0.50\">+</button></div><div class=\"product-item\"><span>Energy Drink</span><span>‚Ç¨2.00</span><button id=\"btn-energy\" data-product=\"energy\" data-price=\"2.00\">+</button></div></div><div class=\"product-category\"><h3>S√º√üigkeiten</h3><div class=\"product-item\"><span>Schokoriegel</span><span>‚Ç¨1.20</span><button id=\"btn-schoko\" data-product=\"schoko\" data-price=\"1.20\">+</button></div><div class=\"product-item\"><span>Gummib√§rchen</span><span>‚Ç¨0.80</span><button id=\"btn-gummi\" data-product=\"gummi\" data-price=\"0.80\">+</button></div><div class=\"product-item\"><span>Chips</span><span>‚Ç¨1.80</span><button id=\"btn-chips\" data-product=\"chips\" data-price=\"1.80\">+</button></div><div class=\"product-item\"><span>Kekse</span><span>‚Ç¨1.00</span><button id=\"btn-kekse\" data-product=\"kekse\" data-price=\"1.00\">+</button></div></div></div><div class=\"cart-section\"><h3>Warenkorb</h3><div id=\"cart-items\"></div><div class=\"cart-total\">Gesamt: <span id=\"cart-total\">‚Ç¨0.00</span></div><div class=\"cart-actions\"><button id=\"clear-cart\" class=\"btn-secondary\">Leeren</button><button id=\"checkout\" class=\"btn-primary\">Buchen</button></div></div><div class=\"transaction-log\"><h3>Letzte Buchungen</h3><div id=\"transactions\"><div class=\"transaction-item\"><strong>Max Mustermann</strong><br>24.6.2025, 20:50:03 - ‚Ç¨3.00</div></div></div></div>",
  "css": ".hackspace-shop { padding: 15px; font-family: Arial, sans-serif; max-width: 100%; } .app-light-theme .hackspace-shop { background: #ffffff; color: #212529; } .app-dark-theme .hackspace-shop { background: #2c3e50; color: #f8f9fa; } .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; padding-bottom: 10px; border-bottom: 2px solid; } .app-light-theme .header { border-color: #dee2e6; } .app-dark-theme .header { border-color: #495057; } .header h2 { margin: 0; font-size: 1.5em; } .balance-display { font-size: 1.2em; font-weight: bold; } .app-light-theme .balance-display { color: #28a745; } .app-dark-theme .balance-display { color: #66ff99; } .member-section { margin-bottom: 20px; } .member-section label { display: block; margin-bottom: 5px; font-weight: bold; } .member-section select { width: 100%; padding: 8px; border: 1px solid; border-radius: 4px; font-size: 14px; } .app-light-theme .member-section select { background: #ffffff; color: #495057; border-color: #ced4da; } .app-dark-theme .member-section select { background: #495057; color: #f8f9fa; border-color: #6c757d; } .products-grid { margin-bottom: 20px; } .product-category { margin-bottom: 15px; } .product-category h3 { margin: 0 0 10px 0; font-size: 1.2em; } .app-light-theme .product-category h3 { color: #495057; } .app-dark-theme .product-category h3 { color: #e9ecef; } .product-item { display: flex; justify-content: space-between; align-items: center; padding: 8px; margin-bottom: 5px; border-radius: 4px; } .app-light-theme .product-item { background: #f8f9fa; } .app-dark-theme .product-item { background: #34495e; } .product-item button { background: #28a745; color: #ffffff; border: none; padding: 5px 12px; border-radius: 3px; cursor: pointer; font-weight: bold; } .product-item button:hover { background: #218838; } .cart-section { margin-bottom: 20px; padding: 15px; border-radius: 6px; } .app-light-theme .cart-section { background: #f8f9fa; border: 1px solid #dee2e6; } .app-dark-theme .cart-section { background: #34495e; border: 1px solid #495057; } .cart-section h3 { margin: 0 0 10px 0; } .cart-item { display: flex; justify-content: space-between; padding: 5px 0; } .cart-total { font-weight: bold; font-size: 1.1em; margin: 10px 0; padding-top: 10px; border-top: 1px solid; } .app-light-theme .cart-total { border-color: #dee2e6; } .app-dark-theme .cart-total { border-color: #6c757d; } .cart-actions { display: flex; gap: 10px; margin-top: 15px; } .btn-primary { background: #007bff; color: #ffffff; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer; font-size: 14px; } .btn-primary:hover { background: #0056b3; } .btn-secondary { background: #6c757d; color: #ffffff; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer; font-size: 14px; } .btn-secondary:hover { background: #545b62; } .transaction-log { max-height: 150px; overflow-y: auto; } .transaction-log h3 { margin: 0 0 10px 0; } .transaction-item { padding: 8px; margin-bottom: 5px; border-radius: 4px; font-size: 0.9em; } .app-light-theme .transaction-item { background: #e9ecef; } .app-dark-theme .transaction-item { background: #495057; } #cart-items:empty:before { content: 'Warenkorb ist leer'; opacity: 0.6; font-style: italic; } #transactions:empty:before { content: 'Keine Buchungen'; opacity: 0.6; font-style: italic; }",
  "javascript": "class HackspaceShop { constructor() { this.members = { max: { name: 'Max Mustermann', balance: 25.50 }, anna: { name: 'Anna Schmidt', balance: 18.30 }, tom: { name: 'Tom Weber', balance: 32.00 }, lisa: { name: 'Lisa Meyer', balance: 12.80 } }; this.cart = []; this.currentMember = null; this.transactions = []; this.init(); } init() { this.bindEvents(); this.updateDisplay(); } bindEvents() { document.getElementById('member-select').addEventListener('change', (e) => { this.selectMember(e.target.value); }); document.querySelectorAll('[data-product]').forEach(btn => { btn.addEventListener('click', (e) => { this.addToCart(e.target.dataset.product, parseFloat(e.target.dataset.price)); }); }); document.getElementById('clear-cart').addEventListener('click', () => { this.clearCart(); }); document.getElementById('checkout').addEventListener('click', () => { this.checkout(); }); } selectMember(memberId) { this.currentMember = memberId; this.updateBalance(); } addToCart(product, price) { if (!this.currentMember) { alert('Bitte w√§hlen Sie zuerst ein Mitglied aus.'); return; } this.cart.push({ product, price }); this.updateCartDisplay(); } clearCart() { this.cart = []; this.updateCartDisplay(); } checkout() { if (!this.currentMember) { alert('Bitte w√§hlen Sie ein Mitglied aus.'); return; } if (this.cart.length === 0) { alert('Warenkorb ist leer.'); return; } const total = this.cart.reduce((sum, item) => sum + item.price, 0); if (this.members[this.currentMember].balance < total) { alert('Nicht gen√ºgend Guthaben.'); return; } this.members[this.currentMember].balance -= total; const transaction = { member: this.members[this.currentMember].name, items: [...this.cart], total: total, date: new Date().toLocaleString('de-DE') }; this.transactions.unshift(transaction); this.cart = []; this.updateDisplay(); alert('Buchung erfolgreich!'); } updateDisplay() { this.updateBalance(); this.updateCartDisplay(); this.updateTransactions(); } updateBalance() { const balanceEl = document.getElementById('balance'); if (this.currentMember) { balanceEl.textContent = '‚Ç¨' + this.members[this.currentMember].balance.toFixed(2); } else { balanceEl.textContent = '‚Ç¨0.00'; } } updateCartDisplay() { const cartEl = document.getElementById('cart-items'); const totalEl = document.getElementById('cart-total'); cartEl.innerHTML = ''; let total = 0; this.cart.forEach(item => { const div = document.createElement('div'); div.className = 'cart-item'; div.innerHTML = '<span>' + item.product + '</span><span>‚Ç¨' + item.price.toFixed(2) + '</span>'; cartEl.appendChild(div); total += item.price; }); totalEl.textContent = '‚Ç¨' + total.toFixed(2); } updateTransactions() { const transEl = document.getElementById('transactions'); transEl.innerHTML = ''; this.transactions.slice(0, 5).forEach(trans => { const div = document.createElement('div'); div.className = 'transaction-item'; div.innerHTML = '<strong>' + trans.member + '</strong><br>' + trans.date + ' - ‚Ç¨' + trans.total.toFixed(2); transEl.appendChild(div); }); } } const shop = new HackspaceShop();",
  "isMinimized": false,
  "isMaximized": false,
  "modificationHistory": [],
  "lastModification": null,
  "promptHistory": [
    {
      "timestamp": "2025-06-24T18:48:39.674Z",
      "type": "creation",
      "userRequest": "Bitte erstelle eine Shop App f√ºr den Hackspace um den Verbrauch von Getr√§nken und S√ºssigkeiten zu buchen f√ºr die Mitglieder.",
      "prompt": "You are creating a functional app for a windowed operating system interface. The user requested: \"Bitte erstelle eine Shop App f√ºr den Hackspace um den Verbrauch von Getr√§nken und S√ºssigkeiten zu buchen f√ºr die Mitglieder.\"\n\nCRITICAL REQUIREMENTS:\n1. Create a COMPLETE, FUNCTIONAL app that works in a window\n2. The app will be placed inside a window with ID \"content_app_mcavpjf54f28\"\n3. Use ONLY vanilla HTML, CSS, and JavaScript - no external libraries\n4. Make the app responsive and fit well in a window (300-600px wide)\n5. Include ALL necessary functionality for the requested app\n6. Use modern, clean UI design\n7. THEME SUPPORT: The system supports Dark Mode and Light Mode themes. Currently active theme: dark\n\nTHEME REQUIREMENTS:\n- Create CSS that works well in BOTH Dark Mode and Light Mode\n- Use CSS classes with theme-specific styling: .app-light-theme and .app-dark-theme\n- The app will automatically apply the correct theme class based on system settings\n\nCRITICAL UI CONTRAST GUIDELINES:\nLIGHT MODE (.app-light-theme):\n- Primary backgrounds: #ffffff (white), #f8f9fa (light gray)\n- Secondary backgrounds: #e9ecef (medium light gray), #dee2e6 (border gray)\n- Text on light backgrounds: #212529 (dark), #495057 (medium dark)\n- Button backgrounds: #007bff (blue), #28a745 (green), #dc3545 (red), #ffc107 (yellow), #6c757d (gray)\n- Button text: #ffffff (white) on colored buttons, #212529 (dark) on light buttons\n- Input fields: #ffffff background with #495057 text and #ced4da borders\n- Links: #007bff (blue) with #0056b3 hover\n- NEVER use light text on light backgrounds or white text on white/light colored buttons\n\nDARK MODE (.app-dark-theme):\n- Primary backgrounds: #2c3e50 (dark blue), #34495e (medium dark)\n- Secondary backgrounds: #3a4a5c (lighter dark), #495057 (medium)\n- Text on dark backgrounds: #f8f9fa (light), #e9ecef (medium light)\n- Button backgrounds: #0d6efd (blue), #198754 (green), #dc3545 (red), #ffc107 (yellow), #6c757d (gray)\n- Button text: #ffffff (white) on all colored buttons\n- Input fields: #495057 background with #f8f9fa text and #6c757d borders\n- Links: #66b3ff (light blue) with #99ccff hover\n- NEVER use dark text on dark backgrounds\n\nMANDATORY CONTRAST RULES:\n1. ALWAYS ensure minimum 4.5:1 contrast ratio between text and background\n2. Button text MUST be clearly visible against button background\n3. Use these safe color combinations:\n   - Light mode: Dark text (#212529) on light backgrounds (#ffffff, #f8f9fa)\n   - Dark mode: Light text (#f8f9fa) on dark backgrounds (#2c3e50, #34495e)\n4. For colored buttons, ALWAYS use white text (#ffffff) unless the button is very light\n5. Test readability: If you can't clearly read the text, change the color\n6. Use border/outline for buttons with poor contrast\n7. Avoid these problematic combinations:\n   - White text on yellow, light gray, or light colored backgrounds\n   - Dark text on dark colored backgrounds\n   - Gray text on gray backgrounds without sufficient contrast\n\nBUTTON STYLING REQUIREMENTS:\n- Primary buttons: Use strong colors (#007bff, #28a745) with white text\n- Secondary buttons: Use #6c757d with white text or #f8f9fa with dark text\n- Danger buttons: Use #dc3545 with white text\n- Warning buttons: Use #ffc107 with dark text (#212529)\n- Light buttons: Use #f8f9fa background with dark text (#212529)\n- Always add hover states with slightly darker/lighter versions\n- Include focus states for accessibility\n\nRESPONSE FORMAT - Return ONLY a JSON object with this structure:\n{\n  \"title\": \"App Name\",\n  \"icon\": \"üì±\",\n  \"html\": \"complete HTML content\",\n  \"css\": \"complete CSS styles\",\n  \"javascript\": \"complete JavaScript functionality\"\n}\n\nICON REQUIREMENTS:\n- Choose a single UTF-8 emoji that best represents the app's function\n- Examples: üìÖ for calendar, üßÆ for calculator, üìù for text editor, üéÆ for games, üìä for charts, etc.\n- The icon should be intuitive and clearly represent the app's purpose\n\nCONTENT RULES:\n- HTML: Use single quotes for attributes to avoid JSON conflicts. NEVER use onclick attributes - use IDs instead\n- CSS: Keep simple, no line breaks, avoid complex selectors\n- JavaScript: Keep simple and avoid complex string operations that could break JSON\n- NO base64 encoding - use plain text\n- Always create BOTH the User Interface AND the Logic (JavaScript)\n- For interactive elements (buttons, inputs, forms), ALWAYS include JavaScript\n- CRITICAL: Use addEventListener in JavaScript, NOT onclick attributes in HTML\n- Give all interactive elements unique IDs and reference them in JavaScript\n- IMPORTANT: onclick attributes will NOT work because JavaScript runs in isolated scope\n- Always use document.getElementById() and addEventListener() pattern\n- CRITICAL JSON FORMATTING: Ensure all strings are properly escaped for JSON\n- Avoid complex JavaScript with many quotes, brackets, or special characters\n- Keep JavaScript simple and readable to prevent JSON parsing errors\n- Make sure you do not break the Response Format - return a valid JSON object\nIMPLEMENTATION GUIDELINES:\n- Structure your HTML with semantic elements and proper IDs for all interactive components\n- Style your CSS to be clean and responsive, using the theme classes for light/dark mode support\n- Write your JavaScript to handle all user interactions using addEventListener pattern\n- Ensure all form elements, buttons, and interactive areas have proper event handling\n- Test your logic mentally to ensure the app will work as expected\n- Keep code simple and avoid overly complex string manipulations that could cause parsing issues\n\nNow create a functional app for: \"Bitte erstelle eine Shop App f√ºr den Hackspace um den Verbrauch von Getr√§nken und S√ºssigkeiten zu buchen f√ºr die Mitglieder.\"",
      "date": "6/24/2025, 8:48:39 PM"
    }
  ],
  "exportDate": "2025-06-24T18:50:54.177Z",
  "version": "1.1"
}